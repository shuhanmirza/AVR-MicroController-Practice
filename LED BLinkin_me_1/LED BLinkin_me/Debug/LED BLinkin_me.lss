
LED BLinkin_me.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000282  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000002d6  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  00000306  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000002f7  00000000  00000000  00000326  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000d9  00000000  00000000  0000061d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000025a  00000000  00000000  000006f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  00000950  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000017b  00000000  00000000  00000974  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000071e  00000000  00000000  00000aef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000010  00000000  00000000  0000120d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 3f 01 	jmp	0x27e	; 0x27e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define F_CPU 1000000UL
#include <util/delay.h>

int main(void)
{
	MCUCSR |= 1 << JTD;
  6c:	84 b7       	in	r24, 0x34	; 52
  6e:	80 68       	ori	r24, 0x80	; 128
  70:	84 bf       	out	0x34, r24	; 52
	MCUCSR |= 1 << JTD;
  72:	84 b7       	in	r24, 0x34	; 52
  74:	80 68       	ori	r24, 0x80	; 128
  76:	84 bf       	out	0x34, r24	; 52
	
	DDRC=0b11111111;
  78:	8f ef       	ldi	r24, 0xFF	; 255
  7a:	84 bb       	out	0x14, r24	; 20



    while(1)
    {
         for(i=1;i<=3;i++)
  7c:	81 e0       	ldi	r24, 0x01	; 1
  7e:	90 e0       	ldi	r25, 0x00	; 0
  80:	0f 2e       	mov	r0, r31
  82:	f5 e0       	ldi	r31, 0x05	; 5
  84:	bf 2e       	mov	r11, r31
  86:	f0 2d       	mov	r31, r0
  88:	a1 2c       	mov	r10, r1
  8a:	99 24       	eor	r9, r9
  8c:	93 94       	inc	r9
  8e:	81 2c       	mov	r8, r1
  90:	a8 e0       	ldi	r26, 0x08	; 8
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	49 2c       	mov	r4, r9
  96:	38 2c       	mov	r3, r8
  98:	e0 e0       	ldi	r30, 0x00	; 0
  9a:	10 e8       	ldi	r17, 0x80	; 128
  9c:	be 2f       	mov	r27, r30
				}
        }

		 //goining up

		 for(j=1; j<=5; j++)
  9e:	68 94       	set
  a0:	ff 24       	eor	r15, r15
  a2:	f2 f8       	bld	r15, 2
  a4:	00 e0       	ldi	r16, 0x00	; 0
  a6:	68 94       	set
  a8:	dd 24       	eor	r13, r13
  aa:	d4 f8       	bld	r13, 4
  ac:	e1 2c       	mov	r14, r1
  ae:	68 94       	set
  b0:	cc 24       	eor	r12, r12
  b2:	c3 f8       	bld	r12, 3

    while(1)
    {
         for(i=1;i<=3;i++)
		 {
			PORTC = 0b11111111;
  b4:	77 24       	eor	r7, r7
  b6:	7a 94       	dec	r7
  b8:	18 c0       	rjmp	.+48     	; 0xea <main+0x7e>
  ba:	75 ba       	out	0x15, r7	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  bc:	2f e9       	ldi	r18, 0x9F	; 159
  be:	36 e8       	ldi	r19, 0x86	; 134
  c0:	41 e0       	ldi	r20, 0x01	; 1
  c2:	21 50       	subi	r18, 0x01	; 1
  c4:	30 40       	sbci	r19, 0x00	; 0
  c6:	40 40       	sbci	r20, 0x00	; 0
  c8:	e1 f7       	brne	.-8      	; 0xc2 <main+0x56>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x60>
  cc:	00 00       	nop
			_delay_ms(500);
			PORTD= 0b000000;
  ce:	12 ba       	out	0x12, r1	; 18
  d0:	cf e9       	ldi	r28, 0x9F	; 159
  d2:	d6 e8       	ldi	r29, 0x86	; 134
  d4:	21 e0       	ldi	r18, 0x01	; 1
  d6:	c1 50       	subi	r28, 0x01	; 1
  d8:	d0 40       	sbci	r29, 0x00	; 0
  da:	20 40       	sbci	r18, 0x00	; 0
  dc:	e1 f7       	brne	.-8      	; 0xd6 <main+0x6a>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <main+0x74>
  e0:	00 00       	nop



    while(1)
    {
         for(i=1;i<=3;i++)
  e2:	01 96       	adiw	r24, 0x01	; 1
  e4:	02 c0       	rjmp	.+4      	; 0xea <main+0x7e>
  e6:	89 2d       	mov	r24, r9
  e8:	98 2d       	mov	r25, r8
  ea:	84 30       	cpi	r24, 0x04	; 4
  ec:	91 05       	cpc	r25, r1
  ee:	2c f3       	brlt	.-54     	; 0xba <main+0x4e>
  f0:	4b 2d       	mov	r20, r11
  f2:	5a 2d       	mov	r21, r10
  f4:	16 c0       	rjmp	.+44     	; 0x122 <main+0xb6>

		for(j=1; j<=5; j++)
		{
				for( i=1; i<=128; i=2*i)
				{
					PORTC=i;
  f6:	85 bb       	out	0x15, r24	; 21
  f8:	c7 ea       	ldi	r28, 0xA7	; 167
  fa:	d1 e6       	ldi	r29, 0x61	; 97
  fc:	21 97       	sbiw	r28, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <main+0x90>
 100:	00 c0       	rjmp	.+0      	; 0x102 <main+0x96>
 102:	00 00       	nop

		 //goining down

		for(j=1; j<=5; j++)
		{
				for( i=1; i<=128; i=2*i)
 104:	88 0f       	add	r24, r24
 106:	99 1f       	adc	r25, r25
 108:	21 50       	subi	r18, 0x01	; 1
 10a:	31 09       	sbc	r19, r1
 10c:	21 15       	cp	r18, r1
 10e:	31 05       	cpc	r19, r1
 110:	91 f7       	brne	.-28     	; 0xf6 <main+0x8a>
 112:	41 50       	subi	r20, 0x01	; 1
 114:	51 09       	sbc	r21, r1
			_delay_ms(500);
		 }

		 //goining down

		for(j=1; j<=5; j++)
 116:	41 15       	cp	r20, r1
 118:	51 05       	cpc	r21, r1
 11a:	19 f4       	brne	.+6      	; 0x122 <main+0xb6>
 11c:	4b 2d       	mov	r20, r11
 11e:	5a 2d       	mov	r21, r10
 120:	22 c0       	rjmp	.+68     	; 0x166 <main+0xfa>



    while(1)
    {
         for(i=1;i<=3;i++)
 122:	2a 2f       	mov	r18, r26
 124:	3f 2f       	mov	r19, r31
 126:	84 2d       	mov	r24, r4
 128:	93 2d       	mov	r25, r3
 12a:	e5 cf       	rjmp	.-54     	; 0xf6 <main+0x8a>

		 for(j=1; j<=5; j++)
		 {
			 for( i=128; i>=1; i=i/2)
			 {
				 PORTC=i;
 12c:	65 bb       	out	0x15, r22	; 21
 12e:	87 ea       	ldi	r24, 0xA7	; 167
 130:	91 e6       	ldi	r25, 0x61	; 97
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <main+0xc6>
 136:	00 c0       	rjmp	.+0      	; 0x138 <main+0xcc>
 138:	00 00       	nop

		 //goining up

		 for(j=1; j<=5; j++)
		 {
			 for( i=128; i>=1; i=i/2)
 13a:	86 2f       	mov	r24, r22
 13c:	97 2f       	mov	r25, r23
 13e:	99 23       	and	r25, r25
 140:	0c f4       	brge	.+2      	; 0x144 <main+0xd8>
 142:	01 96       	adiw	r24, 0x01	; 1
 144:	95 95       	asr	r25
 146:	87 95       	ror	r24
 148:	68 2f       	mov	r22, r24
 14a:	79 2f       	mov	r23, r25
 14c:	21 50       	subi	r18, 0x01	; 1
 14e:	31 09       	sbc	r19, r1
 150:	21 15       	cp	r18, r1
 152:	31 05       	cpc	r19, r1
 154:	59 f7       	brne	.-42     	; 0x12c <main+0xc0>
 156:	41 50       	subi	r20, 0x01	; 1
 158:	51 09       	sbc	r21, r1
				}
        }

		 //goining up

		 for(j=1; j<=5; j++)
 15a:	41 15       	cp	r20, r1
 15c:	51 05       	cpc	r21, r1
 15e:	19 f4       	brne	.+6      	; 0x166 <main+0xfa>
 160:	2b 2d       	mov	r18, r11
 162:	3a 2d       	mov	r19, r10
 164:	34 c0       	rjmp	.+104    	; 0x1ce <main+0x162>



    while(1)
    {
         for(i=1;i<=3;i++)
 166:	2a 2f       	mov	r18, r26
 168:	3f 2f       	mov	r19, r31
 16a:	61 2f       	mov	r22, r17
 16c:	7b 2f       	mov	r23, r27
 16e:	de cf       	rjmp	.-68     	; 0x12c <main+0xc0>

		  for(j=1; j<=5; j++)
		  {
			  for( i=1; i<=128; i=2*i)
			  {
				  PORTC=i;
 170:	85 bb       	out	0x15, r24	; 21
 172:	c7 ea       	ldi	r28, 0xA7	; 167
 174:	d1 e6       	ldi	r29, 0x61	; 97
 176:	21 97       	sbiw	r28, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <main+0x10a>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <main+0x110>
 17c:	00 00       	nop

		  //goining up+down

		  for(j=1; j<=5; j++)
		  {
			  for( i=1; i<=128; i=2*i)
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	41 50       	subi	r20, 0x01	; 1
 184:	51 09       	sbc	r21, r1
 186:	41 15       	cp	r20, r1
 188:	51 05       	cpc	r21, r1
 18a:	91 f7       	brne	.-28     	; 0x170 <main+0x104>
 18c:	4a 2f       	mov	r20, r26
 18e:	5f 2f       	mov	r21, r31
 190:	61 2f       	mov	r22, r17
 192:	7b 2f       	mov	r23, r27
				  _delay_ms(100);
			  }

			  for( i=128; i>=1; i=i/2)
			  {
				  PORTC=i;
 194:	65 bb       	out	0x15, r22	; 21
 196:	87 ea       	ldi	r24, 0xA7	; 167
 198:	91 e6       	ldi	r25, 0x61	; 97
 19a:	01 97       	sbiw	r24, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <main+0x12e>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <main+0x134>
 1a0:	00 00       	nop
				  PORTC=i;

				  _delay_ms(100);
			  }

			  for( i=128; i>=1; i=i/2)
 1a2:	86 2f       	mov	r24, r22
 1a4:	97 2f       	mov	r25, r23
 1a6:	99 23       	and	r25, r25
 1a8:	0c f4       	brge	.+2      	; 0x1ac <main+0x140>
 1aa:	01 96       	adiw	r24, 0x01	; 1
 1ac:	95 95       	asr	r25
 1ae:	87 95       	ror	r24
 1b0:	68 2f       	mov	r22, r24
 1b2:	79 2f       	mov	r23, r25
 1b4:	41 50       	subi	r20, 0x01	; 1
 1b6:	51 09       	sbc	r21, r1
 1b8:	41 15       	cp	r20, r1
 1ba:	51 05       	cpc	r21, r1
 1bc:	59 f7       	brne	.-42     	; 0x194 <main+0x128>
 1be:	21 50       	subi	r18, 0x01	; 1
 1c0:	31 09       	sbc	r19, r1
		 }


		  //goining up+down

		  for(j=1; j<=5; j++)
 1c2:	21 15       	cp	r18, r1
 1c4:	31 05       	cpc	r19, r1
 1c6:	19 f4       	brne	.+6      	; 0x1ce <main+0x162>
 1c8:	6b 2d       	mov	r22, r11
 1ca:	7a 2d       	mov	r23, r10
 1cc:	51 c0       	rjmp	.+162    	; 0x270 <main+0x204>
			_delay_ms(500);
		 }

		 //goining down

		for(j=1; j<=5; j++)
 1ce:	4a 2f       	mov	r20, r26
 1d0:	5f 2f       	mov	r21, r31
 1d2:	84 2d       	mov	r24, r4
 1d4:	93 2d       	mov	r25, r3
 1d6:	cc cf       	rjmp	.-104    	; 0x170 <main+0x104>

		   for(j=1; j<=5; j++)
		   {
			   for(k=16 , i=8; i>=1; i=i/2,k=k*2)
			   {
				   PORTC |=i;
 1d8:	85 b3       	in	r24, 0x15	; 21
 1da:	86 29       	or	r24, r6
 1dc:	85 bb       	out	0x15, r24	; 21
				   PORTC |=k;
 1de:	85 b3       	in	r24, 0x15	; 21
 1e0:	82 2b       	or	r24, r18
 1e2:	85 bb       	out	0x15, r24	; 21
 1e4:	cf e4       	ldi	r28, 0x4F	; 79
 1e6:	d3 ec       	ldi	r29, 0xC3	; 195
 1e8:	21 97       	sbiw	r28, 0x01	; 1
 1ea:	f1 f7       	brne	.-4      	; 0x1e8 <main+0x17c>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <main+0x182>
 1ee:	00 00       	nop
				    _delay_ms(200);

				   PORTC=0b00000000;
 1f0:	e5 bb       	out	0x15, r30	; 21
 1f2:	89 e6       	ldi	r24, 0x69	; 105
 1f4:	98 e1       	ldi	r25, 0x18	; 24
 1f6:	01 97       	sbiw	r24, 0x01	; 1
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <main+0x18a>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <main+0x190>
 1fc:	00 00       	nop

		  //special

		   for(j=1; j<=5; j++)
		   {
			   for(k=16 , i=8; i>=1; i=i/2,k=k*2)
 1fe:	86 2d       	mov	r24, r6
 200:	95 2d       	mov	r25, r5
 202:	99 23       	and	r25, r25
 204:	0c f4       	brge	.+2      	; 0x208 <main+0x19c>
 206:	01 96       	adiw	r24, 0x01	; 1
 208:	95 95       	asr	r25
 20a:	87 95       	ror	r24
 20c:	68 2e       	mov	r6, r24
 20e:	59 2e       	mov	r5, r25
 210:	22 0f       	add	r18, r18
 212:	33 1f       	adc	r19, r19
 214:	41 50       	subi	r20, 0x01	; 1
 216:	51 09       	sbc	r21, r1
 218:	41 15       	cp	r20, r1
 21a:	51 05       	cpc	r21, r1
 21c:	e9 f6       	brne	.-70     	; 0x1d8 <main+0x16c>
 21e:	4f 2d       	mov	r20, r15
 220:	50 2f       	mov	r21, r16
 222:	61 2e       	mov	r6, r17
 224:	5b 2e       	mov	r5, r27
 226:	24 2d       	mov	r18, r4
 228:	33 2d       	mov	r19, r3
				   _delay_ms(25);
			   }

			    for(k=128 , i=1; i<=8; i=i*2,k=k/2)
			    {
				    PORTC |=i;
 22a:	85 b3       	in	r24, 0x15	; 21
 22c:	82 2b       	or	r24, r18
 22e:	85 bb       	out	0x15, r24	; 21
				    PORTC |=k;
 230:	85 b3       	in	r24, 0x15	; 21
 232:	86 29       	or	r24, r6
 234:	85 bb       	out	0x15, r24	; 21
 236:	cf e4       	ldi	r28, 0x4F	; 79
 238:	d3 ec       	ldi	r29, 0xC3	; 195
 23a:	21 97       	sbiw	r28, 0x01	; 1
 23c:	f1 f7       	brne	.-4      	; 0x23a <main+0x1ce>
 23e:	00 c0       	rjmp	.+0      	; 0x240 <main+0x1d4>
 240:	00 00       	nop
				    _delay_ms(200);

				    PORTC=0b00000000;
 242:	e5 bb       	out	0x15, r30	; 21

				   PORTC=0b00000000;
				   _delay_ms(25);
			   }

			    for(k=128 , i=1; i<=8; i=i*2,k=k/2)
 244:	22 0f       	add	r18, r18
 246:	33 1f       	adc	r19, r19
 248:	86 2d       	mov	r24, r6
 24a:	95 2d       	mov	r25, r5
 24c:	99 23       	and	r25, r25
 24e:	0c f4       	brge	.+2      	; 0x252 <main+0x1e6>
 250:	01 96       	adiw	r24, 0x01	; 1
 252:	95 95       	asr	r25
 254:	87 95       	ror	r24
 256:	68 2e       	mov	r6, r24
 258:	59 2e       	mov	r5, r25
 25a:	41 50       	subi	r20, 0x01	; 1
 25c:	51 09       	sbc	r21, r1
 25e:	41 15       	cp	r20, r1
 260:	51 05       	cpc	r21, r1
 262:	19 f7       	brne	.-58     	; 0x22a <main+0x1be>
 264:	61 50       	subi	r22, 0x01	; 1
 266:	71 09       	sbc	r23, r1

		  }

		  //special

		   for(j=1; j<=5; j++)
 268:	61 15       	cp	r22, r1
 26a:	71 05       	cpc	r23, r1
 26c:	09 f4       	brne	.+2      	; 0x270 <main+0x204>
 26e:	3b cf       	rjmp	.-394    	; 0xe6 <main+0x7a>
				}
        }

		 //goining up

		 for(j=1; j<=5; j++)
 270:	4f 2d       	mov	r20, r15
 272:	50 2f       	mov	r21, r16
 274:	2d 2d       	mov	r18, r13
 276:	3e 2d       	mov	r19, r14
 278:	6c 2c       	mov	r6, r12
 27a:	5b 2e       	mov	r5, r27
 27c:	ad cf       	rjmp	.-166    	; 0x1d8 <main+0x16c>

0000027e <_exit>:
 27e:	f8 94       	cli

00000280 <__stop_program>:
 280:	ff cf       	rjmp	.-2      	; 0x280 <__stop_program>
