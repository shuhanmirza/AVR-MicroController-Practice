
EEPROM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000096  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000000ea  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  0000011a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000e4  00000000  00000000  0000013a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000ab  00000000  00000000  0000021e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000115  00000000  00000000  000002c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  000003e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000120  00000000  00000000  00000404  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000010  00000000  00000000  00000524  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define EEPROM_ADDRESS 	10

int main(void)
{
	char data1 = 'A';
	eeprom_write_byte((uint8_t*)EEPROM_ADDRESS,(uint8_t)data1);
  6c:	61 e4       	ldi	r22, 0x41	; 65
  6e:	8a e0       	ldi	r24, 0x0A	; 10
  70:	90 e0       	ldi	r25, 0x00	; 0
  72:	0e 94 3c 00 	call	0x78	; 0x78 <__eewr_byte_m32>
  76:	ff cf       	rjmp	.-2      	; 0x76 <main+0xa>

00000078 <__eewr_byte_m32>:
  78:	26 2f       	mov	r18, r22

0000007a <__eewr_r18_m32>:
  7a:	e1 99       	sbic	0x1c, 1	; 28
  7c:	fe cf       	rjmp	.-4      	; 0x7a <__eewr_r18_m32>
  7e:	9f bb       	out	0x1f, r25	; 31
  80:	8e bb       	out	0x1e, r24	; 30
  82:	2d bb       	out	0x1d, r18	; 29
  84:	0f b6       	in	r0, 0x3f	; 63
  86:	f8 94       	cli
  88:	e2 9a       	sbi	0x1c, 2	; 28
  8a:	e1 9a       	sbi	0x1c, 1	; 28
  8c:	0f be       	out	0x3f, r0	; 63
  8e:	01 96       	adiw	r24, 0x01	; 1
  90:	08 95       	ret

00000092 <_exit>:
  92:	f8 94       	cli

00000094 <__stop_program>:
  94:	ff cf       	rjmp	.-2      	; 0x94 <__stop_program>
