
7_segment_me_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001d4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  000001d4  00000248  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  00000298  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000002ec  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000011b  00000000  00000000  000005a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000001ef  00000000  00000000  000006bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000034  00000000  00000000  000008b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000018d  00000000  00000000  000008e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000003e8  00000000  00000000  00000a71  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000040  00000000  00000000  00000e59  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ed       	ldi	r30, 0xD4	; 212
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 38       	cpi	r26, 0x80	; 128
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 e8 00 	jmp	0x1d0	; 0x1d0 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include <avr/io.h>
#include <util/delay.h>


int main(void)
{
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	a0 97       	sbiw	r28, 0x20	; 32
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
	DDRB=0xFF;
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	87 bb       	out	0x17, r24	; 23
	int i,j;
	
      
	 int word[6]={0x6D,0x74,0x1C,0x74,0x77,0x54,0x40};
  9a:	8c e0       	ldi	r24, 0x0C	; 12
  9c:	e0 e6       	ldi	r30, 0x60	; 96
  9e:	f0 e0       	ldi	r31, 0x00	; 0
  a0:	de 01       	movw	r26, r28
  a2:	11 96       	adiw	r26, 0x01	; 1
  a4:	01 90       	ld	r0, Z+
  a6:	0d 92       	st	X+, r0
  a8:	8a 95       	dec	r24
  aa:	e1 f7       	brne	.-8      	; 0xa4 <main+0x22>
		 int digit[10]={63,6,91,79,102,109,125,7,127,111};
  ac:	84 e1       	ldi	r24, 0x14	; 20
  ae:	ec e6       	ldi	r30, 0x6C	; 108
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	de 01       	movw	r26, r28
  b4:	1d 96       	adiw	r26, 0x0d	; 13
  b6:	01 90       	ld	r0, Z+
  b8:	0d 92       	st	X+, r0
  ba:	8a 95       	dec	r24
  bc:	e1 f7       	brne	.-8      	; 0xb6 <main+0x34>
	  
    while(1)
    {
        for(i=0;i<=6;i++)
  be:	40 e0       	ldi	r20, 0x00	; 0
  c0:	50 e0       	ldi	r21, 0x00	; 0
  c2:	9e 01       	movw	r18, r28
  c4:	2f 5d       	subi	r18, 0xDF	; 223
  c6:	3f 4f       	sbci	r19, 0xFF	; 255
			 
			   _delay_ms(800);
			 
			 if(i==9)
			 {
				 PORTB=0;
  c8:	a8 e0       	ldi	r26, 0x08	; 8
  ca:	70 e0       	ldi	r23, 0x00	; 0
				 for(j=0;j<8;j++)
				 {
					 PORTB=192;
  cc:	b0 ec       	ldi	r27, 0xC0	; 192
	 int word[6]={0x6D,0x74,0x1C,0x74,0x77,0x54,0x40};
		 int digit[10]={63,6,91,79,102,109,125,7,127,111};
	  
    while(1)
    {
        for(i=0;i<=6;i++)
  ce:	00 e0       	ldi	r16, 0x00	; 0
  d0:	10 e0       	ldi	r17, 0x00	; 0
			else
			{
				for(j=0;j<8;j++)
				{
					PORTB=0;
					PORTB=0x40;
  d2:	60 e4       	ldi	r22, 0x40	; 64
  d4:	35 c0       	rjmp	.+106    	; 0x140 <main+0xbe>
	  
    while(1)
    {
        for(i=0;i<=6;i++)
		{
			PORTB=word[i];
  d6:	fa 01       	movw	r30, r20
  d8:	ee 0f       	add	r30, r30
  da:	ff 1f       	adc	r31, r31
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	8c 0f       	add	r24, r28
  e2:	9d 1f       	adc	r25, r29
  e4:	e8 0f       	add	r30, r24
  e6:	f9 1f       	adc	r31, r25
  e8:	80 81       	ld	r24, Z
  ea:	88 bb       	out	0x18, r24	; 24
			
			if(i<6)  _delay_ms(800);
  ec:	46 30       	cpi	r20, 0x06	; 6
  ee:	51 05       	cpc	r21, r1
  f0:	54 f4       	brge	.+20     	; 0x106 <main+0x84>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f2:	9f ef       	ldi	r25, 0xFF	; 255
  f4:	e0 e7       	ldi	r30, 0x70	; 112
  f6:	f2 e0       	ldi	r31, 0x02	; 2
  f8:	91 50       	subi	r25, 0x01	; 1
  fa:	e0 40       	sbci	r30, 0x00	; 0
  fc:	f0 40       	sbci	r31, 0x00	; 0
  fe:	e1 f7       	brne	.-8      	; 0xf8 <main+0x76>
 100:	00 c0       	rjmp	.+0      	; 0x102 <main+0x80>
 102:	00 00       	nop
 104:	14 c0       	rjmp	.+40     	; 0x12e <main+0xac>
 106:	8a 2f       	mov	r24, r26
 108:	97 2f       	mov	r25, r23
			
			else
			{
				for(j=0;j<8;j++)
				{
					PORTB=0;
 10a:	18 ba       	out	0x18, r1	; 24
					PORTB=0x40;
 10c:	68 bb       	out	0x18, r22	; 24
 10e:	e7 ea       	ldi	r30, 0xA7	; 167
 110:	f1 e6       	ldi	r31, 0x61	; 97
 112:	31 97       	sbiw	r30, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <main+0x90>
 116:	00 c0       	rjmp	.+0      	; 0x118 <main+0x96>
 118:	00 00       	nop
					_delay_ms(100);
					
					PORTB=0;
 11a:	18 ba       	out	0x18, r1	; 24
 11c:	e7 ea       	ldi	r30, 0xA7	; 167
 11e:	f1 e6       	ldi	r31, 0x61	; 97
 120:	31 97       	sbiw	r30, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <main+0x9e>
 124:	00 c0       	rjmp	.+0      	; 0x126 <main+0xa4>
 126:	00 00       	nop
 128:	01 97       	sbiw	r24, 0x01	; 1
			
			if(i<6)  _delay_ms(800);
			
			else
			{
				for(j=0;j<8;j++)
 12a:	00 97       	sbiw	r24, 0x00	; 0
 12c:	71 f7       	brne	.-36     	; 0x10a <main+0x88>
					_delay_ms(100);
				}
			}
			
			
			PORTB=0;
 12e:	18 ba       	out	0x18, r1	; 24
 130:	87 ea       	ldi	r24, 0xA7	; 167
 132:	91 e6       	ldi	r25, 0x61	; 97
 134:	01 97       	sbiw	r24, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <main+0xb2>
 138:	00 c0       	rjmp	.+0      	; 0x13a <main+0xb8>
 13a:	00 00       	nop
	 int word[6]={0x6D,0x74,0x1C,0x74,0x77,0x54,0x40};
		 int digit[10]={63,6,91,79,102,109,125,7,127,111};
	  
    while(1)
    {
        for(i=0;i<=6;i++)
 13c:	4f 5f       	subi	r20, 0xFF	; 255
 13e:	5f 4f       	sbci	r21, 0xFF	; 255
 140:	47 30       	cpi	r20, 0x07	; 7
 142:	51 05       	cpc	r21, r1
 144:	44 f2       	brlt	.-112    	; 0xd6 <main+0x54>
 146:	36 c0       	rjmp	.+108    	; 0x1b4 <main+0x132>
			 
			   _delay_ms(800);
			 
			 if(i==9)
			 {
				 PORTB=0;
 148:	18 ba       	out	0x18, r1	; 24
 14a:	8a 2f       	mov	r24, r26
 14c:	97 2f       	mov	r25, r23
				 for(j=0;j<8;j++)
				 {
					 PORTB=192;
 14e:	b8 bb       	out	0x18, r27	; 24
 150:	e7 ea       	ldi	r30, 0xA7	; 167
 152:	f1 e6       	ldi	r31, 0x61	; 97
 154:	31 97       	sbiw	r30, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <main+0xd2>
 158:	00 c0       	rjmp	.+0      	; 0x15a <main+0xd8>
 15a:	00 00       	nop
					 _delay_ms(100);
					 
					 PORTB=0;
 15c:	18 ba       	out	0x18, r1	; 24
 15e:	e7 ea       	ldi	r30, 0xA7	; 167
 160:	f1 e6       	ldi	r31, 0x61	; 97
 162:	31 97       	sbiw	r30, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <main+0xe0>
 166:	00 c0       	rjmp	.+0      	; 0x168 <main+0xe6>
 168:	00 00       	nop
 16a:	01 97       	sbiw	r24, 0x01	; 1
			   _delay_ms(800);
			 
			 if(i==9)
			 {
				 PORTB=0;
				 for(j=0;j<8;j++)
 16c:	00 97       	sbiw	r24, 0x00	; 0
 16e:	79 f7       	brne	.-34     	; 0x14e <main+0xcc>
 170:	17 c0       	rjmp	.+46     	; 0x1a0 <main+0x11e>
					 _delay_ms(100);
				 }
			 }
			 
			 
			 PORTB=0;
 172:	18 ba       	out	0x18, r1	; 24
 174:	87 ea       	ldi	r24, 0xA7	; 167
 176:	91 e6       	ldi	r25, 0x61	; 97
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <main+0xf6>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <main+0xfc>
 17e:	00 00       	nop
		
		
		
		 for(i=0;i<10;i++)
		 {
			 PORTB=digit[i];
 180:	80 81       	ld	r24, Z
 182:	32 96       	adiw	r30, 0x02	; 2
 184:	88 bb       	out	0x18, r24	; 24
 186:	9f ef       	ldi	r25, 0xFF	; 255
 188:	40 e7       	ldi	r20, 0x70	; 112
 18a:	82 e0       	ldi	r24, 0x02	; 2
 18c:	91 50       	subi	r25, 0x01	; 1
 18e:	40 40       	sbci	r20, 0x00	; 0
 190:	80 40       	sbci	r24, 0x00	; 0
 192:	e1 f7       	brne	.-8      	; 0x18c <main+0x10a>
 194:	00 c0       	rjmp	.+0      	; 0x196 <main+0x114>
 196:	00 00       	nop
			 
			   _delay_ms(800);
			 
			 if(i==9)
 198:	e2 17       	cp	r30, r18
 19a:	f3 07       	cpc	r31, r19
 19c:	51 f7       	brne	.-44     	; 0x172 <main+0xf0>
 19e:	d4 cf       	rjmp	.-88     	; 0x148 <main+0xc6>
					 _delay_ms(100);
				 }
			 }
			 
			 
			 PORTB=0;
 1a0:	18 ba       	out	0x18, r1	; 24
 1a2:	e7 ea       	ldi	r30, 0xA7	; 167
 1a4:	f1 e6       	ldi	r31, 0x61	; 97
 1a6:	31 97       	sbiw	r30, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <main+0x124>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <main+0x12a>
 1ac:	00 00       	nop
	 int word[6]={0x6D,0x74,0x1C,0x74,0x77,0x54,0x40};
		 int digit[10]={63,6,91,79,102,109,125,7,127,111};
	  
    while(1)
    {
        for(i=0;i<=6;i++)
 1ae:	40 2f       	mov	r20, r16
 1b0:	51 2f       	mov	r21, r17
 1b2:	c6 cf       	rjmp	.-116    	; 0x140 <main+0xbe>
		
		
		
		 for(i=0;i<10;i++)
		 {
			 PORTB=digit[i];
 1b4:	8d 85       	ldd	r24, Y+13	; 0x0d
 1b6:	88 bb       	out	0x18, r24	; 24
 1b8:	ff ef       	ldi	r31, 0xFF	; 255
 1ba:	40 e7       	ldi	r20, 0x70	; 112
 1bc:	82 e0       	ldi	r24, 0x02	; 2
 1be:	f1 50       	subi	r31, 0x01	; 1
 1c0:	40 40       	sbci	r20, 0x00	; 0
 1c2:	80 40       	sbci	r24, 0x00	; 0
 1c4:	e1 f7       	brne	.-8      	; 0x1be <main+0x13c>
 1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <main+0x146>
 1c8:	00 00       	nop
 1ca:	fe 01       	movw	r30, r28
 1cc:	3f 96       	adiw	r30, 0x0f	; 15
 1ce:	d1 cf       	rjmp	.-94     	; 0x172 <main+0xf0>

000001d0 <_exit>:
 1d0:	f8 94       	cli

000001d2 <__stop_program>:
 1d2:	ff cf       	rjmp	.-2      	; 0x1d2 <__stop_program>
