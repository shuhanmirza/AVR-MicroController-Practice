
pwm_me.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000126  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000028  00000000  00000000  00000156  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000170  00000000  00000000  0000017e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000eb  00000000  00000000  000002ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000015d  00000000  00000000  000003d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000034  00000000  00000000  00000538  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000189  00000000  00000000  0000056c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000000f2  00000000  00000000  000006f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000018  00000000  00000000  000007e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 43 00 	call	0x86	; 0x86 <main>
  64:	0c 94 67 00 	jmp	0xce	; 0xce <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <pwm_init_pB>:
#include <util/delay.h>


void pwm_init_pB()
{
	DDRB |= (1<<PB3);
  6c:	bb 9a       	sbi	0x17, 3	; 23
	
	 TCCR0 |= (1<< WGM00) | (1<< WGM01) ; //fast pwm mode
  6e:	83 b7       	in	r24, 0x33	; 51
  70:	88 64       	ori	r24, 0x48	; 72
  72:	83 bf       	out	0x33, r24	; 51
	 
	 TCCR0 |= (1<< COM00) | (1<<COM01); // enable OC0
  74:	83 b7       	in	r24, 0x33	; 51
  76:	80 63       	ori	r24, 0x30	; 48
  78:	83 bf       	out	0x33, r24	; 51
	 
	 TCCR0 |= (1 << CS01);
  7a:	83 b7       	in	r24, 0x33	; 51
  7c:	82 60       	ori	r24, 0x02	; 2
  7e:	83 bf       	out	0x33, r24	; 51
	 
	 OCR0 =255;
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	8c bf       	out	0x3c, r24	; 60
  84:	08 95       	ret

00000086 <main>:
}

int main(void)
{
	int i;
	pwm_init_pB();
  86:	0e 94 36 00 	call	0x6c	; 0x6c <pwm_init_pB>
	
    while(1)
    {
        for(i=0;i<=255 ;i++)
  8a:	80 e0       	ldi	r24, 0x00	; 0
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	3f ef       	ldi	r19, 0xFF	; 255
  90:	20 e0       	ldi	r18, 0x00	; 0
  92:	50 e0       	ldi	r21, 0x00	; 0
  94:	40 e0       	ldi	r20, 0x00	; 0
  96:	0b c0       	rjmp	.+22     	; 0xae <main+0x28>
		{
		  OCR0=i;
  98:	8c bf       	out	0x3c, r24	; 60
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9a:	e3 ed       	ldi	r30, 0xD3	; 211
  9c:	f0 e3       	ldi	r31, 0x30	; 48
  9e:	31 97       	sbiw	r30, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <main+0x18>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <main+0x1e>
  a4:	00 00       	nop
	int i;
	pwm_init_pB();
	
    while(1)
    {
        for(i=0;i<=255 ;i++)
  a6:	01 96       	adiw	r24, 0x01	; 1
  a8:	02 c0       	rjmp	.+4      	; 0xae <main+0x28>
  aa:	85 2f       	mov	r24, r21
  ac:	94 2f       	mov	r25, r20
  ae:	8f 3f       	cpi	r24, 0xFF	; 255
  b0:	91 05       	cpc	r25, r1
  b2:	91 f3       	breq	.-28     	; 0x98 <main+0x12>
  b4:	8c f3       	brlt	.-30     	; 0x98 <main+0x12>
  b6:	83 2f       	mov	r24, r19
  b8:	92 2f       	mov	r25, r18
		  _delay_ms(50);	
		}
		
		 for( i=255; i>=0 ;i--)
		 {
			 OCR0=i;
  ba:	8c bf       	out	0x3c, r24	; 60
  bc:	e3 ed       	ldi	r30, 0xD3	; 211
  be:	f0 e3       	ldi	r31, 0x30	; 48
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <main+0x3a>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <main+0x40>
  c6:	00 00       	nop
		{
		  OCR0=i;
		  _delay_ms(50);	
		}
		
		 for( i=255; i>=0 ;i--)
  c8:	01 97       	sbiw	r24, 0x01	; 1
  ca:	b8 f7       	brcc	.-18     	; 0xba <main+0x34>
  cc:	ee cf       	rjmp	.-36     	; 0xaa <main+0x24>

000000ce <_exit>:
  ce:	f8 94       	cli

000000d0 <__stop_program>:
  d0:	ff cf       	rjmp	.-2      	; 0xd0 <__stop_program>
